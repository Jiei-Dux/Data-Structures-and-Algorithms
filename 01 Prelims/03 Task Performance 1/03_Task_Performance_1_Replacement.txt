# Task Performance
# 03 Task Performance 1 - 03_Task_Performance_1_Replacement.txt
# Data Structures and Algorithms

Answer the following questions in your own words:


  NOTE: I got some help from a friend I know... was that allowed? :D


  1.  What is Data Structure?
      {
        Just by recollecting what I heard and read, and by looking at the
 	  words "Data Structure", I could say that "Data Structure" have
  something to do with "data", like how to store, handle, access, etc.
      }




  2.  What are the 2 types of data structures?
      {
If I remember correctly, both Linear and Non-Linear are two types of data structures, unless it was Public and Private, but I think both P's are types of ADTs instead of data structures, so I am guessing Linear and Non-Linear are the types of data structures.
      }




  3.  What is Abstract Data Type(ADT)?
      {
Just from reading the words "Abstract Data Type", I can guess that this thing is what you call on how you structure your data, get it? Jokes aside, ADT is how you organize, implement, or structure,
your code, data, whatever.
      }




  4.  What are the 2 types of ADT?
      {
If I guessed it correctly, Public and Private are the two types of ADT, unless it was Linear and Non-Linear, but I am taking a gamble that it is Public and Private. :)
      }




  5.  List down and explain the Abstract Data Type/s
      - LinkedList 
        { 
This thing is like an array, you store different data, elements, whatever you call them, you store them here. 
        }

      - Stack
        {
This thing is an ordered list that executes the last command, code, whatever that you, or the user inputs, first, and the very first command, code, whatever as the very last thing it'll execute.
        }

      - Queue
        {
This thing is similar to the "Stack ADT", but instead of executing first the last input and executing last the first input, this one does the opposite, it executes the first input first and executes the last input as last.
        }

      - Tree
        {
I slightly remember this having something to do with levels? position? rank? those things in politics, like the phrase "higher ups" or something.
        }

      - Map
        {
This thing, I believe is a set of ordered pairs, like x and y, a and b, yada yada.
        }

      - Heap
        {
I don't really remember what this does but I only remember that this has something to do with binary stuff.
        }

      - Priority Queue
        {
My friend came into my room and told me this and just by looking at the words "Priority Queue", this thing is similar to "Queue" but this one executes stuff according to their ranks, number, order, whatever it is.
        }

      - Set
        {
Basing off of Discrete Structures 2, I'm guessing this is like, no THIS is a group of different data, elements, whatever you call them.
        }

      - Graph
        {
Me and my friend don't know nor remember this one, but I'm guessing this one is like "Map" but the only difference is that this thing has those line thingy, because... graph... :)
        }





  6.  What is an Algorithm?
      {
I'm basing this off of the "YouTube Algorithm", so for me, algorithm is a set of instructions that the program will execute in order.
      }




  7.  List down and explain the characteristics of algorithm
      - Input
        {
The algorithm should have data given before it begins processing stuff.
        }

      - Output
        {
The algorithm should have one or more results that has a connection or something to do with the input.
        }

      - Uniqueness
        {
The algorithm's results are dependent on the previous input and/or output, just like an if syntax.
        }

      - Finiteness
        {
The algorithm must stop after a certain number of steps, just like a for loop or while loop that has the increment syntax.
        }

      - Definiteness
        {
The algorithm should be clearly defined, like, the user or whoever is reading it can understand whatever is on their screen.
        }




  8.  What are the difference between Iteration and Recursion?
      {
This is just me basing off of what my friend told me, basically Recursion happens when a function calls itself once or multiple times, while Iteration happens when an action was repeated multiple times.
      }

